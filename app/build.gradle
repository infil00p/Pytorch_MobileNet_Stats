plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 32
    configurations {
        extractForNativeBuild
    }

    defaultConfig {
        applicationId "org.infil00p.pytorch_mobilenet_stats"
        minSdk 28
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ''
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.18.1'
        }
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    // Adding the Chart Library again
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    //Tensorflow Implementation
    implementation 'org.tensorflow:tensorflow-lite:2.10.0'
    implementation 'org.tensorflow:tensorflow-lite-gpu:2.10.0'
    extractForNativeBuild 'org.tensorflow:tensorflow-lite:2.10.0'
    extractForNativeBuild 'org.tensorflow:tensorflow-lite-gpu:2.10.0'

    //ONNX Runtime
    implementation 'com.microsoft.onnxruntime:onnxruntime-mobile:1.13.1'
    extractForNativeBuild 'com.microsoft.onnxruntime:onnxruntime-mobile:1.13.1'

    // PyTorch Implementation
    implementation 'org.pytorch:pytorch_android:1.12.2'
    extractForNativeBuild 'org.pytorch:pytorch_android:1.12.2'

    implementation ('org.pytorch:pytorch_android_torchvision:1.12.2') {
        exclude group: 'org.pytorch', module: 'pytorch_android_lite'
    }
}


task extractAARForNativeBuild {
    doLast {
        configurations.extractForNativeBuild.files.each {
            def file = it.absoluteFile
            copy {
                from zipTree(file)
                into "$buildDir/$file.name"
                include "headers/**"
                include "jni/**"
            }
        }
    }
}

tasks.whenTaskAdded { task ->
    if (task.name.contains('externalNativeBuild')) {
        task.dependsOn(extractAARForNativeBuild)
    }
}